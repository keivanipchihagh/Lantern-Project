# Generated by Django 3.1.6 on 2021-03-10 13:45

import datetime
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Menu',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=20, unique=True)),
                ('icon', models.CharField(max_length=20)),
                ('label', models.CharField(max_length=10, null=True)),
                ('category', models.CharField(max_length=6)),
            ],
            options={
                'db_table': 'dashboard_menu',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Site',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('host', models.CharField(max_length=50, unique=True)),
                ('url', models.CharField(max_length=50, unique=True)),
                ('private_key', models.CharField(max_length=128, unique=True)),
                ('public_key', models.CharField(max_length=128, unique=True)),
                ('date_joined', models.DateTimeField(default=datetime.datetime(2021, 3, 10, 17, 15, 41, 814333))),
                ('date_expires', models.DateTimeField(blank=True, null=True)),
                ('livechat_service', models.BooleanField(default=True)),
                ('ticket_service', models.BooleanField(default=True)),
                ('virtualagent_service', models.BooleanField(default=False)),
            ],
            options={
                'db_table': 'dashboard_site',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('firstname', models.CharField(max_length=30, validators=[django.core.validators.RegexValidator('^[A-Za-z ]+$', message='Letters allowed only!')])),
                ('lastname', models.CharField(max_length=30, validators=[django.core.validators.RegexValidator('^[A-Za-z ]+$', message='Letters allowed only!')])),
                ('emailaddress', models.EmailField(help_text='Max length: 30', max_length=50, unique=True, verbose_name='Email Address')),
                ('username', models.CharField(help_text='Max length: 30', max_length=30, unique=True)),
                ('password', models.CharField(max_length=64)),
                ('phonenumber', models.CharField(help_text='Format: XXXX XXX XXXX', max_length=11, validators=[django.core.validators.RegexValidator('^[0-9]+$', message='Numbers allowed only!')], verbose_name='Phone Number')),
                ('role', models.CharField(max_length=5, validators=[django.core.validators.RegexValidator('{staff|admin|agent}', message='Unknown Role')])),
                ('title', models.CharField(max_length=30, null=True, validators=[django.core.validators.RegexValidator('^[A-Za-z ]+$', message='Letters allowed only!')])),
                ('assigned_rooms_count', models.IntegerField(default=0, verbose_name='Number of assigned rooms')),
                ('rating', models.FloatField(blank=True, null=True)),
                ('user_key', models.CharField(max_length=128, unique=True)),
                ('is_online', models.BooleanField(default=False, null=True)),
                ('site', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='dashboard.site', verbose_name='Assigned Site')),
            ],
            options={
                'db_table': 'dashboard_user',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Room',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('room_key', models.CharField(max_length=64, unique=True)),
                ('status', models.CharField(default='open', max_length=8, validators=[django.core.validators.RegexValidator('^{open|closed}$', message='Status Unknonw')])),
                ('ip', models.CharField(blank=True, max_length=15, null=True)),
                ('date_opened', models.DateTimeField(default=datetime.datetime(2021, 3, 10, 17, 15, 41, 814333))),
                ('date_closed', models.DateTimeField(blank=True, default=None, null=True)),
                ('topic', models.CharField(max_length=30)),
                ('site', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='dashboard.site')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='dashboard.user')),
            ],
            options={
                'db_table': 'dashboard_room',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='ReservedMessages',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(help_text='Max Length: 30', max_length=30)),
                ('tag', models.CharField(blank=True, default='general', help_text='Max Length: 15', max_length=15)),
                ('color', models.CharField(choices=[['INDIGO', 'indigo'], ['GREEN', 'green'], ['BLACK', 'black'], ['PURPLE', 'purple'], ['PINK', 'pink'], ['LIME', 'lime'], ['TEAL', 'teal'], ['CYAN', 'cyan'], ['BLUE', 'blue']], default='INDIGO', max_length=15)),
                ('content', models.TextField(help_text='Max Length: 500', max_length=500)),
                ('starred', models.BooleanField(blank=True, default=0, null=True)),
                ('date_modified', models.DateTimeField(verbose_name='Modified Date')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='dashboard.user')),
            ],
            options={
                'db_table': 'dashboard_reservedmessages',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='NewsLetter',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(help_text='Max length: 50', max_length=50)),
                ('type', models.CharField(choices=[('general', 'general'), ('maintenance', 'maintenance'), ('update', 'update')], default='general', max_length=30)),
                ('date_published', models.DateTimeField(verbose_name='Published Date')),
                ('content', models.TextField(help_text='Max Length: 500', max_length=500)),
                ('tags', models.CharField(max_length=100)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='dashboard.user')),
            ],
            options={
                'db_table': 'dashboard_newsletter',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Message',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content', models.CharField(max_length=300)),
                ('client', models.BooleanField(default=True)),
                ('datetime', models.DateTimeField()),
                ('room', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='dashboard.room')),
            ],
            options={
                'db_table': 'dashboard_message',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Log',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=30)),
                ('datetime', models.DateTimeField(default=datetime.datetime(2021, 3, 10, 17, 15, 41, 815377))),
                ('site', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='dashboard.site')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='dashboard.user')),
            ],
            options={
                'db_table': 'dashboard_log',
                'managed': True,
            },
        ),
    ]
